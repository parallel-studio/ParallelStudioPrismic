@use "@/styles/_media.scss" as media;

$film: var(--gallery-gap);
$small: var(--px-small);
$medium: var(--px-medium);

@mixin bottom_gap($container-gap-type, $thumbnail-gap-type) {
  // padding-block-end: $container-gap-type;
  .container {
    > *:not(:last-child) {
      padding-inline-end: $thumbnail-gap-type;
    }
  }
}

// .small {
//   @include bottom_gap($small, $small);
// }

// .medium {
//   @include bottom_gap($medium, $small);
// }

// .film {
//   @include bottom_gap($medium, $film);
// }

.small,
.medium {
  .container {
    gap: var(--px-small);
  }
}

.film {
  .container {
    gap: var(--px-medium);
  }
}

.container {
  display: grid;
  margin: 0;
  padding: 0;

  > *:not(:last-child) {
    background-color: white;
  }
}

.block_default {
  > * > * {
    block-size: var(--block-height-base);
  }
}

.block_auto {
  > * > * {
    block-size: 100%;
  }
}

.default,
.bannerAutoGrid {
  grid-auto-columns: minmax(0, 1fr);
  grid-auto-flow: column;
}

.one_two {
  grid-template-columns: 1fr 2fr;
}

.two_one {
  grid-template-columns: 2fr 1fr;
}

.big_small_big {
  grid-template-columns: 1fr 0.75fr 1fr;
}

.small_big_small {
  grid-template-columns: 0.5fr 1fr 0.5fr;
}

.three_to_one {
  grid-template-columns: 3fr 1fr;
}

.one_to_three {
  grid-template-columns: 1fr 3fr;
}

@include media.medium {
}

@include media.small {
  .small_big_small,
  .three_to_one,
  .one_to_three,
  .default,
  .one_two,
  .two_one,
  .big_small_big,
  .bannerAutoGrid {
    grid-template-columns: 1fr;
  }

  .default,
  .bannerAutoGrid {
    grid-auto-flow: row;
  }

  // .small,
  // .medium {
  //   .container {
  //     gap: var(--px-small);
  //   }
  // }

  // .film {
  //   .container {
  //     gap: var(--px-medium);
  //   }
  // }

  .small,
  .medium,
  .film {
    .container {
      > *:not(:last-child) {
        padding-inline-end: 0;
      }
    }
  }
}
